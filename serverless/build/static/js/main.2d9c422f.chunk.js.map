{"version":3,"sources":["components/common/Menu/Menu.js","components/common/MenuSelector/MenuSelector.js","components/common/Header/Header.js","containers/HeaderContainer.js","components/common/Base/Base.js","components/landing/Link/Link.js","components/landing/Links/Links.js","components/landing/CenterSentence/CenterSentence.js","containers/LandingContainer.js","pages/LandingPage.js","components/App.js","serviceWorker.js","index.js"],"names":["cx","classnames","bind","styles","Menu","_ref","onMenuToggle","react_default","a","createElement","className","onClick","md","MenuSelector","visible","href","Header","menuToggle","_useState","useState","_useState2","Object","slicedToArray","state","toggle","x","useSpring","from","config","duration","calc","y","window","innerHeight","innerWidth","_useSpring2","xys","mass","tension","friction","_useSpring3","props","set","react_router_dom","to","web","div","style","transform","interpolate","range","output","concat","onMouseMove","_ref2","clientX","clientY","onMouseLeave","s","common_Menu_Menu","common_MenuSelector_MenuSelector","HeaderContainer","handleMenuToggle","_this","setState","objectSpread","this","Fragment","common_Header_Header","Component","Base","children","index","useTransition","id","url","item","opacity","enter","leave","molasses","map","key","backgroundImage","containers_HeaderContainer","Link","text","Links","landing_Link_Link","CenterSentence","sentence","deviceWidth","items","split","trail","useTrail","length","height","rest","objectWithoutProperties","LandingContainer","addListener","addEventListener","handleChangeDeviceWidth","document","documentElement","body","setDeviceWidthState","clientWidth","nextProps","nextState","removeEventListener","_this$state","common_Base_Base","landing_Links_Links","landing_CenterSentence_CenterSentence","LandingPage","Helmet","containers_LandingContainer","App","react_router","path","component","Boolean","location","hostname","match","RootElement","getElementById","ReactDOM","render","components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d9c422f.chunk.js","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nimport { MdMenu } from 'react-icons/md'\nimport styles from './Menu.scss'\n\nconst cx = classnames.bind(styles)\n\nconst Menu = ({ onMenuToggle }) => {\n    return (\n        <div className={cx('Menu')} onClick={onMenuToggle}>\n            <MdMenu />\n        </div>\n    )\n}\n\nexport default Menu\n","import React from 'react'\nimport classnames from 'classnames'\nimport styles from './MenuSelector.scss'\n\nconst cx = classnames.bind(styles)\n\nconst MenuSelector = ({ visible }) => {\n    return (\n        <div className={cx('MenuSelector', !visible && 'invisible')}>\n            <a href=\"https://99ex.jp/trible-rules/\" className={cx('Selector')}>\n                개인정보 처리 방침\n            </a>\n            <a href=\"https://github.com/slave4dead\" className={cx('Selector')}>\n                개발자 github\n            </a>\n        </div>\n    )\n}\n\nexport default MenuSelector\n","import React, { useState } from 'react'\nimport classnames from 'classnames'\nimport { Link } from 'react-router-dom'\nimport { useSpring, animated } from 'react-spring'\n\nimport styles from './Header.scss'\nimport Menu from 'components/common/Menu'\nimport MenuSelector from '../MenuSelector'\n\nconst cx = classnames.bind(styles)\n\nconst Header = ({ menuToggle, onMenuToggle }) => {\n    const [state, toggle] = useState(true)\n    const { x } = useSpring({\n        from: { x: 0 },\n        x: state ? 1 : 0,\n        config: { duration: 1000 },\n    })\n\n    const calc = (x, y) => [\n        -(y - window.innerHeight / 2) / 20,\n        (x - window.innerWidth / 2) / 20,\n        1.1,\n    ]\n    const trans = (x, y, s) =>\n        `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n    const [props, set] = useSpring(() => ({\n        xys: [0, 0, 1],\n        config: { mass: 5, tension: 350, friction: 40 },\n    }))\n    return (\n        <div className={cx('Header')}>\n            <div className={cx('Center')}>\n                <Link to=\"/\" onClick={() => toggle(!state)}>\n                    <animated.div\n                        className={cx('Title')}\n                        style={{\n                            // opacity: x.interpolate({ output: [0.3, 1] }),\n                            // color: 'rgba(181, 199, 210, 100)',\n                            transform: x\n                                .interpolate({\n                                    range: [\n                                        0,\n                                        0.25,\n                                        0.35,\n                                        0.45,\n                                        0.55,\n                                        0.65,\n                                        0.75,\n                                        1,\n                                    ],\n                                    output: [\n                                        1,\n                                        0.97,\n                                        0.9,\n                                        1.1,\n                                        0.9,\n                                        1.1,\n                                        1.03,\n                                        1,\n                                    ],\n                                })\n                                .interpolate(x => `scale(${x})`),\n                            // fontFamily: 'Nanum Pen Script',\n                            // fontSize: '80px',\n                            // color: 'rgba(45, 130, 178, 1)',\n                            // userSelect: 'none',\n                        }}\n                    >\n                        Trible\n                    </animated.div>\n                </Link>\n                <Link to=\"/\">\n                    <animated.div\n                        className=\"HeaderIcon\"\n                        onMouseMove={({ clientX: x, clientY: y }) =>\n                            set({ xys: calc(x, y) })\n                        }\n                        onMouseLeave={() => set({ xys: [0, 0, 1] })}\n                        style={{ transform: props.xys.interpolate(trans) }}\n                    />\n                </Link>\n            </div>\n            <div className={cx('Right')}>\n                {/* <MdMenu className={cx('Menu')} /> */}\n                <Menu onMenuToggle={onMenuToggle} />\n                <MenuSelector visible={menuToggle} />\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport Header from 'components/common/Header'\n\nclass HeaderContainer extends Component {\n    state = {\n        menuToggle: false,\n    }\n\n    handleMenuToggle = () => {\n        this.setState({\n            ...this.state,\n            menuToggle: !this.state.menuToggle,\n        })\n    }\n    render() {\n        const { menuToggle } = this.state\n        const { handleMenuToggle } = this\n        return (\n            <>\n                <Header\n                    menuToggle={menuToggle}\n                    onMenuToggle={handleMenuToggle}\n                />\n            </>\n        )\n    }\n}\n\nexport default HeaderContainer\n","import React, { useState } from 'react'\nimport classnames from 'classnames'\nimport { useTransition, animated, config } from 'react-spring'\nimport styles from './Base.scss'\nimport HeaderContainer from 'containers/HeaderContainer'\n\nconst cx = classnames.bind(styles)\n\nconst Base = ({ children }) => {\n    const slides = [\n        {\n            id: 0,\n            url:\n                'https://s3.ap-northeast-2.amazonaws.com/trible-client-ssr-build/background-2.6169896b.jpg',\n        },\n    ]\n    const [index, set] = useState(0)\n    const transitions = useTransition(slides[index], item => item.id, {\n        from: { opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n        config: config.molasses,\n    })\n    return transitions.map(({ item, props, key }) => (\n        <animated.div\n            key={key}\n            className={cx('Base')}\n            style={{ ...props, backgroundImage: `url(${item.url})` }}\n        >\n            <HeaderContainer />\n            <main>{children}</main>\n        </animated.div>\n    ))\n}\n\nexport default Base\n","import React from 'react'\nimport classnames from 'classnames'\nimport styles from './Link.scss'\n\nconst cx = classnames.bind(styles)\n\nconst Link = ({ text }) => {\n    return <div className={cx('Link')}>{text}</div>\n}\n\nexport default Link\n","import React from 'react'\nimport classnames from 'classnames'\nimport styles from './Links.scss'\nimport Link from 'components/landing/Link'\n\nconst cx = classnames.bind(styles)\n\nconst Links = () => {\n    return (\n        <div className={cx('Links')}>\n            <Link text=\"Link To AppStore\" />\n            <Link text=\"Link To PlayStore\" />\n        </div>\n    )\n}\n\nexport default Links\n","import React, { useState, useEffect } from 'react'\nimport classnames from 'classnames'\nimport { useTrail, animated } from 'react-spring'\nimport styles from './CenterSentence.scss'\n\nconst cx = classnames.bind(styles)\n\nconst CenterSentence = ({ sentence, deviceWidth }) => {\n    const items = sentence.split('\\n')\n    const config = { mass: 5, tension: 2000, friction: 200 }\n    const [toggle] = useState(true)\n\n    const trail = useTrail(items.length, {\n        config,\n        opacity: toggle ? 1 : 0,\n        x: toggle ? 0 : 40,\n        height: toggle\n            ? deviceWidth < 322\n                ? 160\n                : deviceWidth < 494\n                ? 190\n                : deviceWidth < 570\n                ? 145\n                : deviceWidth < 873\n                ? 140\n                : 80\n            : 0,\n        from: { opacity: 0, x: 20, height: 0 },\n    })\n\n    return (\n        <div className={cx('CenterSentence')}>\n            {trail.map(({ x, height, ...rest }, index) => (\n                <animated.div\n                    key={items[index]}\n                    className=\"trails-text\"\n                    style={{\n                        ...rest,\n                        transform: x.interpolate(\n                            x => `translate3d(0,${x}px,0)`\n                        ),\n                    }}\n                >\n                    <animated.div style={{ height }}>\n                        {items[index]}\n                    </animated.div>\n                </animated.div>\n            ))}\n        </div>\n    )\n}\n\nexport default CenterSentence\n","import React, { Component } from 'react'\nimport Base from 'components/common/Base'\nimport Links from 'components/landing/Links'\nimport CenterSentence from 'components/landing/CenterSentence'\n\nclass LandingContainer extends Component {\n    state = {\n        sentence: `Don't try to remember everything.\\n Just use Trible.`,\n        deviceWidth: 0,\n    }\n\n    componentDidMount() {\n        this.setDeviceWidthState()\n        this.addListener()\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextState.deviceWidth - this.state.deviceWidth\n    }\n\n    componentWillUnmount() {\n        if (window) {\n            window.removeEventListener('resize', this.handleChangeDeviceWidth)\n        }\n        if (document.documentElement) {\n            document.body.removeEventListener(\n                'resize',\n                this.handleChangeDeviceWidth\n            )\n        }\n    }\n\n    addListener = () => {\n        if (window) {\n            window.addEventListener('resize', this.handleChangeDeviceWidth)\n        }\n\n        if (document.documentElement) {\n            document.body.addEventListener(\n                'resize',\n                this.handleChangeDeviceWidth\n            )\n        }\n    }\n\n    handleChangeDeviceWidth = () => {\n        this.setDeviceWidthState()\n    }\n\n    setDeviceWidthState = () => {\n        if (window) {\n            this.setState({\n                ...this.state,\n                deviceWidth: window.innerWidth,\n            })\n        }\n\n        if (document && document.documentElement) {\n            this.setState({\n                ...this.state,\n                deviceWidth: document.body.clientWidth,\n            })\n        }\n    }\n\n    render() {\n        const { sentence, deviceWidth } = this.state\n        return (\n            <Base>\n                <Links />\n                <CenterSentence sentence={sentence} deviceWidth={deviceWidth} />\n            </Base>\n        )\n    }\n}\n\nexport default LandingContainer\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport LandingContainer from 'containers/LandingContainer'\n\nconst LandingPage = () => {\n    return (\n        <>\n            <Helmet>\n                <title>Trible - Home</title>\n            </Helmet>\n            <LandingContainer />\n        </>\n    )\n}\n\nexport default LandingPage\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { LandingPage } from '../pages'\n\nconst App = () => {\n    return (\n        <Switch>\n            {/* <Route exact={true} path=\"/\" component={LandingPage} /> */}\n            <Route path=\"*\" component={LandingPage} />\n        </Switch>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './components/App'\nimport './styles/base.scss'\nimport * as serviceWorker from './serviceWorker'\n\nconst RootElement = document.getElementById('root')\n\nconst MainComponent = () => (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nReactDOM.render(<MainComponent />, RootElement)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}